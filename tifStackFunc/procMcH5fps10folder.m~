function procMcH5forCaiman(varargin)

%% USAGE: procMcH5forCaiman(varargin);
%This is based upon nmfSegment and calls some of the preprocessing
% functions and saves a single channel H5 file for use in CaImAn
%
% - also can set other options in arguments
% - now toDownsample = [4 2], e.g. (spatial, temporal)

% dependencies:
% movingvar (MATLAB central)
% h5readClay
% trim2pStack
% caSpatTempFilt
% caExpFilt
% downsampleStack



%segStruc.notes = 'preprocessing file for CaImAn'; %, without mean subtraction before smoothing';

%% Load imaging stack (h5 or Y in workspace)

endFr = 0;  % to read all frames from Ch2 (GCaMP)
%filename = 0; %


segCh = 1; % if varargin{1} is numeric, it's segCh
filename = 0;
[Y, Ysiz, filename, info] = h5readClay(segCh, endFr, filename);
Y = squeeze(Y);
Y = permute(Y, [2 1 3]);
            


%basename = filename(1:strfind(filename, '.h5')-1);
basename = filename(1:strfind(filename, '_Cycle')-1);
basename = [basename '_eMC'];

%saveRed = 1;

%% motion correct (with Eftychios's NoRMCorr)
disp('motion correct (with Eftychios NoRMCorr)');
max_shift = 30; % 15;
options = NoRMCorreSetParms('d1',size(Y,1),'d2',size(Y,2),'bin_width',50,'max_shift',max_shift,'us_fac',50);

tic; 
[Y,shifts,template] = normcorre(Y,options); 
toc;



%% trim if necessary
try
    if size(Y,1)>510 %510
        [Y, trimYX] = trim2pStack(Y);
    else
        trimYX = 0;
    end
catch
    trimYX = 0;
end

disp('Saving Calcium channel avg tif');
avCh2 = squeeze(nanmean(Y,3));    % avg green channel
imwrite(double(avCh2/max(avCh2(:))), [basename '_avCaCh.tif']); % save tif

%% filter stack
toTrim = 0; % already trimmed in separate step
tau = 3; % 10 yields xcorr offset of 10fr (but this gets downsampled)
sigma = 0;
Y = caSpatTempFilt(Y, toTrim, tau, sigma);

% segStruc.filtParams.tau = tau;
% segStruc.filtParams.sigma = sigma;

%% Downsample


    toDownsample = [2 0];  % spatial/temporal, [4 2]
    Y = downsampleStack(Y,toDownsample(1),toDownsample(2));


Y = im2uint16(Y/max(Y(:)));

%segStruc.toDownsample = toDownsample;

%Y = Y(:,:,1:end-50); % hack to trim off some frames from end because of conv2

disp('Saving filtered, downsampled calcium channel avg tif');
avCh2ds = squeeze(nanmean(Y,3));    % avg green channel
imwrite(double(avCh2ds/max(avCh2ds(:))), [basename '_avCaChDs.tif']); % save tif

%% save filtered, downsampled stack (in tzyxc order)
outfile = [basename '_caChExpDs.h5'];
disp(['Saving filtered, downsampled calcium channel as H5 (tzyxc order):' outfile]);
tic;
saveH5(Y, outfile, info);
toc;
