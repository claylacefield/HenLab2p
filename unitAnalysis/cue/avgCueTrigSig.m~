function avgCueTrigSig(segNum, eventName)


% eventName = 'led' to make 'ledTime', etc.

load(findLatestFilename('_segDict_', 'goodSeg'));
load(findLatestFilename('goodSeg'));
load(findLatestFilename('_treadBehStruc_'));


%[lapFrInds, lapEpochs] = findLaps(treadBehStruc.resampY(1:2:end));
[lapCueStruc] = findCueLapTypes(0);
lapTypeArr = lapCueStruc.lapTypeArr;

y = treadBehStruc.resampY; %(1:2:end); % NOTE that lapEpochs are based upon original (non-downsampled) frames
frTimes = treadBehStruc.adjFrTimes; %(1:2:end);

% if there are omitCue laps, estimate a time for typical cue position
if min(lapTypeArr)==0
    cuePos = lapCueStruc.lapTypeCuePos;
    lapEpochs = lapCueStruc.lapEpochs;
    omitLaps = find(lapTypeArr==0);
    
    for i=1:length(omitLaps)
        epochPos = y(lapEpochs(omitLaps(i),1):lapEpochs(omitLaps(i),2));
        cuePosInd = find(epochPos>cuePos(end),1);
        epochTimes = frTimes(lapEpochs(omitLaps(i),1):lapEpochs(omitLaps(i),2));
        omitCueTimes(i) = epochTimes(cuePosInd);
    end
    
end

% times for all cues
evTimes = treadBehStruc.([eventName 'Time']);

% find times of cues at different locations
if length(cuePos)>1
cueLapArr = lapTypeArr(find(lapTypeArr~=0)); % laps with cues
pos1evInd = find(cueLapArr==1);
pos2evInd = find(cueLapArr==2);

else

[evTrigSig1, zeroFr] = eventTrigSig(C(segNum,:), evTimes, 0, [-30 100], frTimes(1:2:end));
end
[evTrigSig0, zeroFr] = eventTrigSig(C(segNum,:), omitCueTimes, 0, [-30 100], frTimes(1:2:end));

figure;
plotMeanSEMshaderr(evTrigSig0, 'r');
hold on;
plotMeanSEMshaderr(evTrigSig1, 'b');

% figure;
% plot(evTrigSig1, 'b');
% hold on;
% plot(evTrigSig0, 'r');

